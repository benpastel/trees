TREE_COUNT=10 python -m trees.benchmarks (battery)


TREE_COUNT=10


Agaricus:

/Users/benji/dev/trees/trees/benchmarks.py:46: DeprecationWarning: `np.bool` is a deprecated alias for the builtin `bool`. To silence this warning, use `bool` by itself. Doing this will not modify any behavior and is safe. If you specifically wanted the numpy scalar type, use `np.bool_` here.
Deprecated in NumPy 1.20; for more details and guidance: https://numpy.org/devdocs/release/1.20.0-notes.html#deprecations
  return X_svm.toarray(), y.astype(np.bool)
X.shape: train (5211, 126), valid (1302, 126)
binary classification with 2518 true and 2693 false

train DFS tree ...
(0.2s)
Classification model with 10 trees with sizes min=63 max=63 mean=63.0
  predict DFS tree...
(0.0s)

      train preds bincount: [2693 2518]
      train: accuracy = 100.00%, precision = 100.00%, recall = 100.00%
      valid: accuracy = 100.00%, precision = 100.00%, recall = 100.00%

train xgboost with: {'n_estimators': 10, 'tree_method': 'hist'}...
/usr/local/opt/python@3.8/Frameworks/Python.framework/Versions/3.8/lib/python3.8/site-packages/xgboost/sklearn.py:1146: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
[21:48:08] WARNING: /Users/travis/build/dmlc/xgboost/src/learner.cc:1095: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'binary:logistic' was changed from 'error' to 'logloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
(0.0s)
predict xgboost...
(0.0s)

      train preds bincount: [2693 2518]
      train: accuracy = 100.00%, precision = 100.00%, recall = 100.00%
      valid: accuracy = 100.00%, precision = 100.00%, recall = 100.00%

train lightgbm with: {'n_estimators': 10}...
(0.0s)
predict lightgbm...
(0.0s)

      train preds bincount: [2686 2525]
      train: accuracy = 99.67%, precision = 99.52%, recall = 99.80%
      valid: accuracy = 99.77%, precision = 100.00%, recall = 99.52%



House Prices:

X.shape: train (1168, 79), valid (292, 79)
regression targets with min=35311.0, max=755000.0, mean=181216.2

train DFS tree ...
(0.1s)
Regression model with 10 trees with sizes min=63 max=63 mean=63.0
  predict DFS tree...
(0.0s)

      train: log(MSE): 18.79, MAE: 9188.26
      valid: log(MSE): 20.23, MAE: 16396.25

train xgboost with: {'n_estimators': 10, 'tree_method': 'hist'}...
(0.0s)
predict xgboost...
(0.0s)

      train: log(MSE): 19.21, MAE: 10662.84
      valid: log(MSE): 20.36, MAE: 17823.46

train lightgbm with: {'n_estimators': 10}...
(0.0s)
predict lightgbm...
(0.0s)

      train: log(MSE): 21.16, MAE: 25376.98
      valid: log(MSE): 21.05, MAE: 25253.82



Home Credit Default:

/Users/benji/dev/trees/trees/benchmarks.py:79: DeprecationWarning: `np.bool` is a deprecated alias for the builtin `bool`. To silence this warning, use `bool` by itself. Doing this will not modify any behavior and is safe. If you specifically wanted the numpy scalar type, use `np.bool_` here.
Deprecated in NumPy 1.20; for more details and guidance: https://numpy.org/devdocs/release/1.20.0-notes.html#deprecations
  y = frame['TARGET'].values.astype(np.bool)
X.shape: train (246009, 104), valid (61502, 104)
binary classification with 19842 true and 226167 false

train DFS tree ...
(0.9s)
Classification model with 10 trees with sizes min=63 max=63 mean=63.0
  predict DFS tree...
(0.1s)

      train preds bincount: [245913     96]
      train: accuracy = 91.95%, precision = 71.88%, recall = 0.35%
      valid: accuracy = 91.91%, precision = 61.54%, recall = 0.32%

train xgboost with: {'n_estimators': 10, 'tree_method': 'hist'}...
/usr/local/opt/python@3.8/Frameworks/Python.framework/Versions/3.8/lib/python3.8/site-packages/xgboost/sklearn.py:1146: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].
  warnings.warn(label_encoder_deprecation_msg, UserWarning)
[21:48:13] WARNING: /Users/travis/build/dmlc/xgboost/src/learner.cc:1095: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'binary:logistic' was changed from 'error' to 'logloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
(0.5s)
predict xgboost...
(0.1s)

      train preds bincount: [246007      2]
      train: accuracy = 91.94%, precision = 100.00%, recall = 0.01%
      valid: accuracy = 91.90%, precision = 0.00%, recall = 0.00%

train lightgbm with: {'n_estimators': 10}...
(0.6s)
predict lightgbm...
(0.1s)

      train preds bincount: [246009]
      train: accuracy = 91.93%, precision = 0.00%, recall = 0.00%
      valid: accuracy = 91.90%, precision = 0.00%, recall = 0.00%



Santander Value:

X.shape: train (3568, 4991), valid (891, 4991)
regression targets with min=30000.0, max=40000000.0, mean=5902691.1

train DFS tree ...
(12.4s)
Regression model with 10 trees with sizes min=63 max=63 mean=63.0
  predict DFS tree...
(0.0s)

      train: log(MSE): 30.69, MAE: 3459019.54
      valid: log(MSE): 31.75, MAE: 5178885.82

train xgboost with: {'n_estimators': 10, 'tree_method': 'hist'}...
(1.8s)
predict xgboost...
(0.0s)

      train: log(MSE): 31.07, MAE: 3928544.21
      valid: log(MSE): 31.74, MAE: 5222179.92

train lightgbm with: {'n_estimators': 10}...
(0.6s)
predict lightgbm...
(0.0s)

      train: log(MSE): 31.37, MAE: 4653737.06
      valid: log(MSE): 31.73, MAE: 5332117.40



M5:

loading from cache
X.shape: train (37734424, 19), valid (9433606, 19)
regression targets with min=0.0, max=763.0, mean=1.2

train DFS tree ...
(21.0s)
Regression model with 10 trees with sizes min=63 max=63 mean=63.0
  predict DFS tree...
(4.0s)

      train: MSE: 4.59, MAE: 0.85
      valid: MSE: 4.51, MAE: 0.85

train xgboost with: {'n_estimators': 10, 'tree_method': 'hist'}...
(19.4s)
predict xgboost...
(2.4s)

      train: MSE: 4.62, MAE: 0.84
      valid: MSE: 4.55, MAE: 0.84

train lightgbm with: {'n_estimators': 10}...
(13.8s)
predict lightgbm...
(5.0s)

      train: MSE: 6.01, MAE: 1.05
      valid: MSE: 5.90, MAE: 1.04



Grupo:

loading from cache
X.shape: train (33112214, 75), valid (8278053, 75)
regression targets with min=0.0, max=5000.0, mean=7.3

train DFS tree ...
(44.9s)
Regression model with 10 trees with sizes min=63 max=63 mean=63.0
  predict DFS tree...
(6.1s)

      train: MSE: 188.69, MAE: 4.10
      valid: MSE: 193.32, MAE: 4.09

train xgboost with: {'n_estimators': 10, 'tree_method': 'hist'}...
(59.5s)
predict xgboost...
(5.6s)

      train: MSE: 178.17, MAE: 3.88
      valid: MSE: 184.88, MAE: 3.88

train lightgbm with: {'n_estimators': 10}...
(25.3s)
predict lightgbm...
(4.4s)

      train: MSE: 249.45, MAE: 4.78
      valid: MSE: 247.84, MAE: 4.77