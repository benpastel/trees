Agaricus:

X.shape: train (5211, 126), valid (1302, 126)
binary classification with 2524 true and 2687 false
train xgboost with: {'n_estimators': 100, 'tree_method': 'hist'}...
(0.1s)
predict xgboost...
(0.0s)

      train preds bincount: [2687 2524]
      train: accuracy = 100.00%, precision = 100.00%, recall = 100.00%
      valid: accuracy = 100.00%, precision = 100.00%, recall = 100.00%

train our tree with Params(smooth_factor=1.0, max_nodes=64, tree_count=100, learning_rate=0.3)...
(0.3s)
Classification model with 100 trees with sizes min=29 max=49 mean=35.56
predict our tree...
(0.0s)

      train preds bincount: [2687 2524]
      train: accuracy = 100.00%, precision = 100.00%, recall = 100.00%
      valid: accuracy = 100.00%, precision = 100.00%, recall = 100.00%



House Prices:

X.shape: train (1168, 79), valid (292, 79)
regression targets with min=35311.0, max=755000.0, mean=180789.9
train xgboost with: {'n_estimators': 100, 'tree_method': 'hist'}...
(0.1s)
predict xgboost...
(0.0s)

      train preds: min=35547.7, max=754527.8, mean=180791.2
      train: MSE: 992030.3, MAE: 703.1
      valid: log(MSE): 20.7, MAE: 16957.5

train our tree with Params(smooth_factor=1.0, max_nodes=64, tree_count=100, learning_rate=0.3)...
(0.1s)
Regression model with 100 trees with sizes min=11 max=63 mean=47.28
predict our tree...
(0.0s)

      train preds: min=34215.2, max=748652.8, mean=180789.9
      train: log(MSE): 16.5, MAE: 2407.6
      valid: log(MSE): 20.6, MAE: 17495.2



Home Credit Default Risk:

X.shape: train (246009, 104), valid (61502, 104)
binary classification with 19783 true and 226226 false
train xgboost with: {'n_estimators': 100, 'tree_method': 'hist'}...
(2.7s)
predict xgboost...
(0.6s)

      train preds bincount: [244637   1372]
      train: accuracy = 92.28%, precision = 79.01%, recall = 5.48%
      valid: accuracy = 91.82%, precision = 51.76%, recall = 2.62%

train our tree with Params(smooth_factor=0.1, max_nodes=64, tree_count=100, learning_rate=0.3)...
(46.2s)
Classification model with 100 trees with sizes min=25 max=63 mean=51.92
predict our tree...
(0.3s)

      train preds bincount: [245931     78]
      train: accuracy = 91.99%, precision = 98.72%, recall = 0.39%
      valid: accuracy = 91.80%, precision = 0.00%, recall = 0.00%



Santander Value:

X.shape: train (3568, 4991), valid (891, 4991)
regression targets with min=30000.0, max=40000000.0, mean=5996450.8
train xgboost with: {'n_estimators': 100, 'tree_method': 'hist'}...
(8.1s)
predict xgboost...
(0.3s)

      train preds: min=-2291408.5, max=40482160.0, mean=5990913.5
      train: log(MSE): 30.0, MAE: 2282396.8
      valid: log(MSE): 31.7, MAE: 5128513.4

train our tree with Params(smooth_factor=1.0, max_nodes=64, tree_count=100, learning_rate=0.3)...
(44.6s)
Regression model with 100 trees with sizes min=5 max=63 mean=42.08
predict our tree...
(0.1s)

      train preds: min=-1934192.3, max=40018998.6, mean=5996450.8
      train: log(MSE): 30.0, MAE: 2260622.1
      valid: log(MSE): 31.8, MAE: 5184774.0



M5:

loading from cache
X.shape: train (37734424, 19), valid (9433606, 19)
regression targets with min=0.0, max=763.0, mean=1.2
train xgboost with: {'n_estimators': 100, 'tree_method': 'hist'}...
(113.0s)
predict xgboost...
(22.6s)

      train preds: min=-3.3, max=759.2, mean=1.2
      train: MSE: 4.4, MAE: 0.8
      valid: MSE: 4.6, MAE: 0.8

train our tree with Params(smooth_factor=0.01, max_nodes=64, tree_count=100, learning_rate=0.3)...
(1678.8s)
Regression model with 100 trees with sizes min=49 max=63 mean=62.1
predict our tree...
(32.5s)

      train preds: min=-13.9, max=405.5, mean=1.2
      train: MSE: 4.4, MAE: 0.8
      valid: MSE: 4.5, MAE: 0.8